<?php

/**
 * BaseShippingTransactionDetail
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $shipping_transaction_id
 * @property integer $barcode
 * @property ShippingTransaction $ShippingTransaction
 * 
 * @method integer                   getId()                      Returns the current record's "id" value
 * @method integer                   getShippingTransactionId()   Returns the current record's "shipping_transaction_id" value
 * @method integer                   getBarcode()                 Returns the current record's "barcode" value
 * @method ShippingTransaction       getShippingTransaction()     Returns the current record's "ShippingTransaction" value
 * @method ShippingTransactionDetail setId()                      Sets the current record's "id" value
 * @method ShippingTransactionDetail setShippingTransactionId()   Sets the current record's "shipping_transaction_id" value
 * @method ShippingTransactionDetail setBarcode()                 Sets the current record's "barcode" value
 * @method ShippingTransactionDetail setShippingTransaction()     Sets the current record's "ShippingTransaction" value
 * 
 * @package    primal
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseShippingTransactionDetail extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('shipping_transaction_detail');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('shipping_transaction_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('barcode', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ShippingTransaction', array(
             'local' => 'shipping_transaction_id',
             'foreign' => 'id',
             'onDelete' => 'cascade'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}